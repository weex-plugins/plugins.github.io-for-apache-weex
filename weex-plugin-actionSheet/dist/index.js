/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(1)
	var __weex_style__ = __webpack_require__(2)
	var __weex_script__ = __webpack_require__(3)
	
	__weex_define__('@weex-component/2db5b02b2b2467ace4cdd68021452568', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/2db5b02b2b2467ace4cdd68021452568',undefined,undefined)

/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = {
	  "type": "scroller",
	  "children": [
	    {
	      "type": "wxc-panel",
	      "attr": {
	        "title": "action module",
	        "type": "primary"
	      },
	      "children": [
	        {
	          "type": "text",
	          "style": {
	            "marginBottom": 20
	          },
	          "attr": {
	            "value": function () {return 'action value: ' + (this.value)}
	          }
	        },
	        {
	          "type": "div",
	          "events": {
	            "click": "createAction"
	          },
	          "style": {
	            "marginBottom": 20,
	            "padding": 20,
	            "backgroundColor": "#444444"
	          },
	          "children": [
	            {
	              "type": "text",
	              "attr": {
	                "value": "Create Action"
	              }
	            }
	          ]
	        }
	      ]
	    }
	  ]
	}

/***/ },
/* 2 */
/***/ function(module, exports) {

	module.exports = {
	  "input": {
	    "fontSize": 60,
	    "height": 80,
	    "width": 400
	  }
	}

/***/ },
/* 3 */
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	var actionSheet = __weex_require__('@weex-module/actionSheet');
	module.exports = {
	  data: function () {return {
	    value: '',
	    index: 0,
	    txtChange: ''
	  }},
	  methods: {
	    createAction: function createAction() {
	
	      var items = [];
	      for (var i = 0; i < 3; i++) {
	        var item = {};
	        if (i == 0) {
	          item = { 'type': 0, 'message': '确认' };
	        }
	        if (i == 1) {
	          item = { 'type': 1, 'message': '取消' };
	        }
	        if (i == 2) {
	          item = { 'type': 2, 'message': '删除' };
	        }
	        items.push(item);
	      }
	      var self = this;
	      actionSheet.create({
	        'items': items,
	        'index': self.index,
	        'title': '提示',
	        'message': '欢迎使用weex第三方市场'
	      }, function (ret) {
	        var result = ret.result;
	        if (result == 'success') {
	          console.log(data);
	          self.value = ret.data.message;
	          self.index = ret.data.index;
	        }
	      });
	    },
	    onchange: function onchange(event) {
	      this.txtChange = event.value;
	      console.log('onchange', event.value);
	    }
	  }
	};}
	/* generated by weex-loader */


/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,